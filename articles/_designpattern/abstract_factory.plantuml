@startuml
skinparam classAttributeIconSize 0

interface AbstractFactory {
+AbstractProductA CreateProductA()
+AbstractProductB CreateProductB()
}


interface AbstractProductA
interface AbstractProductB

class ConcreteFactory1 {
...
+AbstractProductA CreateProductA()
+AbstractProductB CreateProductB()
}

class ConcreteFactory2 {
...
+AbstractProductA CreateProductA()
+AbstractProductB CreateProductB()
}

class Client {
-factory:AbstractFactory
-productA:AbstractProductA
-productB:AbstractProductB
...
+Client(f:AbstractFactory)
}

Client --> AbstractFactory: <<import>>
Client --> AbstractProductA: <<import>>
Client --> AbstractProductB: <<import>>

ConcreteFactory1 .up.|> AbstractFactory
ConcreteFactory2 .up.|> AbstractFactory

ProductA1 .up.|> AbstractProductA
ProductA2 .up.|> AbstractProductA

ProductB1 .up.|> AbstractProductB
ProductB2 .up.|> AbstractProductB

ConcreteFactory1  ..> ProductA1 : <<instatiate>>
ConcreteFactory1  ..> ProductB1 : <<instatiate>>

ConcreteFactory2  ..> ProductA2 : <<instatiate>>
ConcreteFactory2  ..> ProductB2 : <<instatiate>>

hide AbstractFactory field
hide AbstractProductA member
hide AbstractProductB member
hide ProductA1 member
hide ProductA2 member
hide ProductB1 member
hide ProductB2 member

@enduml
